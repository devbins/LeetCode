* [#B] 103 [[https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/][Binary Tree Zigzag Level Order Traversal - LeetCode]]
  思路：层序遍历，每层遍历顺序会变化一次，通过一个变量来控制是从左往右，还是从右往左。
  #+begin_src java
  /**
   ,* Definition for a binary tree node.
   ,* public class TreeNode {
   ,*     int val;
   ,*     TreeNode left;
   ,*     TreeNode right;
   ,*     TreeNode() {}
   ,*     TreeNode(int val) { this.val = val; }
   ,*     TreeNode(int val, TreeNode left, TreeNode right) {
   ,*         this.val = val;
   ,*         this.left = left;
   ,*         this.right = right;
   ,*     }
   ,* }
   ,*/
  class Solution {
      public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
          List<List<Integer>> levelList = new ArrayList();
          if (root == null) return levelList;
          boolean fromLeft = true;
          Queue<TreeNode> q = new LinkedList();
          q.offer(root);
          while (!q.isEmpty()) {
              int size = q.size();
              List<Integer> list = new ArrayList();
            
              for (int i = 0; i < size; i++) {
                  TreeNode node = q.poll();
                  if (fromLeft) {
                      list.add(node.val);
                  }else {
                      list.add(0, node.val);
                  }
                  if (node.left != null) q.offer(node.left);
                  if (node.right != null) q.offer(node.right);
              }
              fromLeft = !fromLeft;
              levelList.add(list);
          }
          return levelList;
      }
  }
  #+end_src
