* [#B] 2 [[https://leetcode.com/problems/add-two-numbers/][Add Two Numbers - LeetCode]]
   思路：
   - 同时遍历两个链表，取出数值进行相加。
   - 对相加的和进行取余数，得到当前节点的值。
   - 对相加的和做除法，得到的值用来判断是否有进位，参与到下一次循环中
   
  #+begin_src java
  /**
   ,* Definition for singly-linked list.
   ,* public class ListNode {
   ,*     int val;
   ,*     ListNode next;
   ,*     ListNode() {}
   ,*     ListNode(int val) { this.val = val; }
   ,*     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
   ,* }
   ,*/
  class Solution {
      public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
          int result = 0;
          ListNode dummy = new ListNode(0);
          ListNode current = dummy;
          while (l1!= null || l2 != null) {
              int x = l1 != null ? l1.val : 0;
              int y = l2 != null ? l2.val : 0;
              int sum = result + x + y;
              // 看看要不要进位
              result = sum / 10;
              current.next = new ListNode(sum%10);
              current = current.next;
              if (l1 != null) l1 = l1.next;
              if (l2 != null) l2 = l2.next;
          }
          // 处理还有进位的情况
          if (result > 0) {
              current.next = new ListNode(result);
          }
          return dummy.next;
      }
  }
  #+end_src
